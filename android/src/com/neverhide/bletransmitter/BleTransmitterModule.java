/**
 * This file was auto-generated by the Titanium Module SDK helper for Android
 * Appcelerator Titanium Mobile
 * Copyright (c) 2009-2010 by Appcelerator, Inc. All Rights Reserved.
 * Licensed under the terms of the Apache Public License
 * Please see the LICENSE included with this distribution for details.
 *
 */
package com.neverhide.bletransmitter;

import org.appcelerator.kroll.KrollModule;
import org.appcelerator.kroll.annotations.Kroll;
import org.appcelerator.titanium.TiApplication;
import org.appcelerator.kroll.common.Log;

import android.bluetooth.BluetoothAdapter;
import android.bluetooth.BluetoothManager;

import java.util.UUID;

import android.bluetooth.le.AdvertiseCallback;
import android.bluetooth.le.BluetoothLeAdvertiser;
import android.content.Intent;
import android.app.Activity;
import android.util.ArrayMap;

import com.neverhide.bletransmitter.util.BleUtils;


@Kroll.module(name="BleTransmitter", id="com.neverhide.bletransmitter")
public class BleTransmitterModule extends KrollModule
{

	// Standard Debugging variables
	private static final String LCAT = "BleTransmitterModule";
	
	// Bluetooth variables
	private static BluetoothAdapter mBluetoothAdapter;
	private static BluetoothManager mBluetoothManager;
	private static BluetoothLeAdvertiser mBluetoothLeAdvertiser;
	private static final int REQUEST_ENABLE_BT = 1;
	private static TiApplication appContext;
	private static Boolean isAdvertising = false;

	public BleTransmitterModule()
	{
		super();
	}

	@Kroll.onAppCreate
	public static void onAppCreate(TiApplication app)
	{
		Log.d(LCAT, "inside onAppCreate");
		
		appContext = TiApplication.getInstance();
		
		mBluetoothManager = BleUtils.getManager(app);
		if (mBluetoothManager != null) {
			mBluetoothAdapter = mBluetoothManager.getAdapter();
        }
		if ((mBluetoothAdapter == null) || (!mBluetoothAdapter.isEnabled())) {
			Intent enableBtIntent = new Intent(BluetoothAdapter.ACTION_REQUEST_ENABLE);
			Activity activity = TiApplication.getAppRootOrCurrentActivity();
	        activity.startActivityForResult(enableBtIntent, REQUEST_ENABLE_BT);
		} else {
			if(!mBluetoothAdapter.isMultipleAdvertisementSupported()) {
				Log.d(LCAT, "BLE ADVERTISEMENT NOT SUPPORTED :(");
			}
		}
	}
	
	private static Boolean isEnabled() {
		if(BleUtils.isBLESupported(appContext)) {
			if(mBluetoothAdapter.isEnabled()) {
				return true;
			} else {
				return false;
			}
		}
		return false;
	}
	
	@Kroll.method
	public void BeaconMe(Object beaconData)
	{
		
		if(isAdvertising) {
			StopBeaconingMe();
		}
		
		if( isEnabled() ) {
			@SuppressWarnings("unchecked")
			ArrayMap<String, Object> dict = (ArrayMap<String, Object>) beaconData;
			
			String uuidString = dict.get("uuid").toString();
	        int major = (Integer) dict.get("major");
	        int minor = (Integer) dict.get("minor");
	        //int txPower = (Integer) dict.get("txpower");
			
			Log.d(LCAT, "UUID: " + uuidString);
			Log.d(LCAT, "Major: " + major);
			Log.d(LCAT, "Minor: " + minor);
			
			if (mBluetoothAdapter == null) {
	            return;
	        }
	        if (mBluetoothLeAdvertiser == null) {
	            mBluetoothLeAdvertiser = mBluetoothAdapter.getBluetoothLeAdvertiser();
	        }
	        if (mBluetoothLeAdvertiser != null) {
	            mBluetoothLeAdvertiser.startAdvertising(
	                    BleUtils.createAdvSettings(true, 0),
	                    BleUtils.createIBeaconAdvertiseData(
	                            UUID.fromString(uuidString),
	                            (short) major, (short) minor, (byte) 0xc5),
	                    mAdvertiseCallback);
	        }
			Log.d(LCAT, "started sending");
			return;
		}
		
	}
	
	@Kroll.method
	public void StopBeaconingMe() {
		if(isAdvertising) {
			if (mBluetoothAdapter == null) {
	            return;
	        }
	        if (mBluetoothLeAdvertiser == null) {
	            mBluetoothLeAdvertiser = mBluetoothAdapter.getBluetoothLeAdvertiser();
	        }
	        if (mBluetoothLeAdvertiser != null) {
	        	mBluetoothLeAdvertiser.stopAdvertising(mAdvertiseCallback);
	        	isAdvertising = false;
	        }
		}
	}
	
	private AdvertiseCallback mAdvertiseCallback = new AdvertiseCallback() {
		public void onStartSuccess(android.bluetooth.le.AdvertiseSettings settingsInEffect) {
			if (settingsInEffect != null) {
                Log.d(LCAT, "onStartSuccess TxPowerLv="
                        + settingsInEffect.getTxPowerLevel()
                        + " mode=" + settingsInEffect.getMode()
                        + " uuid=" + settingsInEffect.describeContents()
                        + " timeout=" + settingsInEffect.getTimeout());
                isAdvertising = true;
            } else {
                Log.d(LCAT, "onStartSuccess, settingInEffect is null");
                isAdvertising = false;
            }
		}
		
		public void onStartFailure(int errorCode) {
			Log.d(LCAT, "OnStartFailure..... i'm affraid :(");
			isAdvertising = false;
		}
	};

}

